"use strict";var recover_button,confirm_button,apply_form,recover_form,return_form,allLink,currentLocation,selectInputField,selectInputLabel,allOptionsArray,selectModalWindow,sidebarSearchForm,sidebarSearchInput,searchFieldResult,searchResult,calendarLabels,calendarInputs,main,mobileButtonOpen,mobi,mobileButtonClose,navigationMenu;function displaySelectValue(){var n=document.getElementById("rateSelect");document.querySelectorAll(".rate-form__option").forEach(function(e){var t;"checked"==e.getAttribute("data-checked")&&(t=e.textContent,n.value=t)})}function uncheckEverySpan(){document.querySelectorAll(".rate-form__option").forEach(function(e){e.setAttribute("data-checked","unchecked")})}Array.prototype.forEach||(Array.prototype.forEach=function(e,t){if(null==this)throw new TypeError("Array.prototype.forEach called on null or undefined");var n,o,r,c=Object(this),a=c.length>>>0;if("function"!=typeof e)throw new TypeError(e+" is not a function");for(1<arguments.length&&(n=t),o=0;o<a;){o in c&&(r=c[o],e.call(n,r,o,c)),o++}}),window.getWindowSize=function(){if(null!=window.innerWidth)return[window.innerWidth,window.innerHeight];var e=document.body,t=document.documentElement;return[Math.max(t.clientWidth,e.clientWidth),Math.max(t.clientHeight,e.clientHeight)]},document.querySelector(".auth-form__recover")&&(recover_button=document.querySelector(".auth-form__recover")).addEventListener("click",function(){apply_form.classList.toggle("js--hidden"),recover_form.classList.toggle("js--hidden")}),document.querySelector(".auth-form__continue")&&(confirm_button=document.querySelector(".auth-form__continue")).addEventListener("click",function(){recover_form.classList.toggle("js--hidden"),return_form.classList.toggle("js--hidden")}),document.querySelector(".form-apply-recover")&&(apply_form=document.querySelector(".form-apply-recover")).addEventListener("submit",function(e){e.preventDefault()}),document.querySelector(".form-recover-check")&&(recover_form=document.querySelector(".form-recover-check")).addEventListener("submit",function(e){e.preventDefault()}),document.querySelector(".form-return-login")&&(return_form=document.querySelector(".form-return-login")),document.querySelectorAll(".navigation-menu__item-link")&&(allLink=document.querySelectorAll(".navigation-menu__item-link"),currentLocation=window.location.href,allLink.forEach(function(e){var t=e.getAttribute("href").replace("./","");currentLocation.includes(t)&&e.classList.add("item--checked")})),document.getElementById("rateSelect")&&(selectInputField=document.getElementById("rateSelect"),selectInputLabel=document.querySelector(".rate-form__label"),allOptionsArray=document.querySelectorAll(".rate-form__option"),selectModalWindow=document.getElementById("rateModal"),displaySelectValue(),allOptionsArray.forEach(function(e){e.addEventListener("click",function(){uncheckEverySpan(),e.setAttribute("data-checked","checked"),displaySelectValue(),selectModalWindow.classList.remove("js--hidden"),selectInputLabel.classList.toggle("js--rotate-arrow")})}),selectInputField.addEventListener("click",function(){selectInputLabel.classList.toggle("js--rotate-arrow"),selectModalWindow.classList.toggle("js--hidden")}),selectModalWindow.addEventListener("mouseleave",function(){selectInputLabel.classList.toggle("js--rotate-arrow"),selectModalWindow.classList.add("js--hidden")})),document.querySelector(".search-section--form ")&&(sidebarSearchForm=document.querySelector(".search-section--form"),sidebarSearchInput=document.querySelector(".input-section__search-input"),sidebarSearchForm.addEventListener("submit",function(e){var t=sidebarSearchInput.value;localStorage.setItem("searchResult",t)})),document.getElementById("searchField")&&(searchFieldResult=document.getElementById("searchField"),searchResult=localStorage.getItem("searchResult"),console.log(localStorage.getItem("searchResult")),searchFieldResult.value=searchResult,"Платеж"==searchFieldResult.value&&(document.getElementById("fullResult").classList.remove("js--hidden"),document.getElementById("emptyResult").classList.add("js--hidden"))),document.getElementById("paysInputStart")&&((calendarLabels=document.querySelectorAll(".stats-form__label")).forEach(function(e){e.addEventListener("click",function(){var t=document.querySelector(".calendar-layer");t.addEventListener("click",function(){t.classList.add("js--hidden")}),e.addEventListener("click",function(){t.classList.remove("js--hidden")}),document.querySelector(".ui-datepicker").querySelectorAll("td").forEach(function(e){e.classList.contains("ui-datepicker-unselectable")||e.addEventListener("click",function(){t.classList.add("js--hidden")})})})}),(calendarInputs=document.querySelectorAll(".form__input-form__input")).forEach(function(e){e.addEventListener("mouseenter",function(){var t=document.querySelector(".calendar-layer");t.addEventListener("click",function(){t.classList.add("js--hidden")}),e.addEventListener("click",function(){t.classList.remove("js--hidden")}),document.querySelector(".ui-datepicker").querySelectorAll("td").forEach(function(e){e.classList.contains("ui-datepicker-unselectable")||e.addEventListener("click",function(){t.classList.add("js--hidden")})})})}),$(function(){$.datepicker.regional.ru={closeText:"Закрыть",prevText:"",nextText:"",currentText:"Сегодня",monthNames:["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],monthNamesShort:["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],dayNames:["воскресенье","понедельник","вторник","среда","четверг","пятница","суббота"],dayNamesShort:["вск","пнд","втр","срд","чтв","птн","сбт"],dayNamesMin:["Вс","Пн","Вт","Ср","Чт","Пт","Сб"],weekHeader:"Нед",dateFormat:"dd.mm.yy",firstDay:1,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},$.datepicker.setDefaults($.datepicker.regional.ru);$("#paysInputStart").datepicker({inline:!0,changeYear:!0,gotoCurrent:!0,dateFormat:"dd.mm.yy",minDate:0,showAnim:"slideDown",numberOfMonths:1},$.datepicker.regional.ru).on("change",function(){$("#paysInputFinish").datepicker("option","minDate",function(e){var t;try{t=$.datepicker.parseDate("dd.mm.yy",e.value)}catch(e){t=null,console.log(t)}return t}(this))}),$("#paysInputFinish").datepicker({inline:!0,changeYear:!0,gotoCurrent:!0,dateFormat:"dd.mm.yy",minDate:0,showAnim:"slideDown",numberOfMonths:1},$.datepicker.regional.ru)})),document.getElementById("blockingInputStart")&&((calendarLabels=document.querySelectorAll(".blocking-form__label")).forEach(function(e){e.addEventListener("click",function(){var t=document.querySelector(".calendar-layer");t.addEventListener("click",function(){t.classList.add("js--hidden")}),e.addEventListener("click",function(){t.classList.remove("js--hidden")}),document.querySelector(".ui-datepicker").querySelectorAll("td").forEach(function(e){e.classList.contains("ui-datepicker-unselectable")||e.addEventListener("click",function(){t.classList.add("js--hidden")})})})}),calendarInputs=document.querySelectorAll(".blocking-form__input"),console.log(calendarInputs),calendarInputs.forEach(function(e){e.addEventListener("focus",function(){console.log("entered");var t=document.querySelector(".calendar-layer");t.addEventListener("click",function(){t.classList.add("js--hidden")}),t.classList.remove("js--hidden"),document.querySelector(".ui-datepicker").querySelectorAll("td").forEach(function(e){e.classList.contains("ui-datepicker-unselectable")||e.addEventListener("click",function(){t.classList.add("js--hidden")})})})}),$(function(){$.datepicker.regional.ru={closeText:"Закрыть",prevText:"",nextText:"",currentText:"Сегодня",monthNames:["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],monthNamesShort:["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],dayNames:["воскресенье","понедельник","вторник","среда","четверг","пятница","суббота"],dayNamesShort:["вск","пнд","втр","срд","чтв","птн","сбт"],dayNamesMin:["Вс","Пн","Вт","Ср","Чт","Пт","Сб"],weekHeader:"Нед",dateFormat:"dd.mm.yy",firstDay:1,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},$.datepicker.setDefaults($.datepicker.regional.ru);$("#blockingInputStart").datepicker({inline:!0,changeYear:!0,gotoCurrent:!0,dateFormat:"dd.mm.yy",minDate:0,showAnim:"slideDown",numberOfMonths:1},$.datepicker.regional.ru).on("change",function(){$("#blockingInputFinish").datepicker("option","minDate",function(e){var t;try{t=$.datepicker.parseDate("dd.mm.yy",e.value)}catch(e){t=null,console.log(t)}return t}(this))}),$("#blockingInputFinish").datepicker({inline:!0,changeYear:!0,gotoCurrent:!0,dateFormat:"dd.mm.yy",minDate:0,showAnim:"slideDown",numberOfMonths:1},$.datepicker.regional.ru)})),document.querySelector(".header-section--mobile")&&(console.log(window.innerWidth),console.log(window.getWindowSize),window.innerWidth<=1200||window.getWindowSize<=1200?(main=document.querySelector("main")).style.marginTop="50px":document.querySelector(".header-section--mobile").classList.add("js--hidden")),document.getElementById("openMenu")&&(mobileButtonOpen=document.getElementById("openMenu"),mobileButtonClose=document.getElementById("closeMenu"),navigationMenu=document.querySelector(".navigation-section--mobile"),mobileButtonOpen.addEventListener("click",function(){mobileButtonClose.classList.add("menu-open--opened"),navigationMenu.classList.toggle("js--transformed")}),mobileButtonClose.addEventListener("click",function(){navigationMenu.classList.toggle("js--transformed")}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
